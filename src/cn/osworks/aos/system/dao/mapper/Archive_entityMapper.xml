<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- archive_entity[archive_entity]SQLMapper自动映射 -->
<!--  注意:此文件由AOS平台自动生成-禁止手工修改 2019-12-27 11:10:05 -->
<mapper namespace="cn.osworks.aos.system.dao.mapper.Archive_entityMapper">
	
	<!-- 插入一个数据持久化对象(插入字段为传入PO实体的非空属性) -->
	<insert id="insert"  parameterType="Archive_entityPO">
		INSERT INTO archive_entity (
		<if test="stmc != null and stmc != ''">
	         stmc, <!-- stmc -->
		</if>
		<if test="djms != null and djms != ''">
	         djms, <!-- djms -->
		</if>
		<if test="djsj != null and djsj != ''">
	         djsj, <!-- djsj -->
		</if>
		<if test="djr != null and djr != ''">
	         djr, <!-- djr -->
		</if>
		<if test="jszt != null and jszt != ''">
	         jszt, <!-- jszt -->
		</if>
		<if test="shr != null and shr != ''">
	         shr, <!-- shr -->
		</if>
		<if test="shsj != null and shsj != ''">
	         shsj, <!-- shsj -->
		</if>
		<if test="shyj != null and shyj != ''">
	         shyj, <!-- shyj -->
		</if>
		<if test="bmmc != null and bmmc != ''">
	         bmmc, <!-- bmmc -->
		</if>
		<if test="bmbh != null and bmbh != ''">
	         bmbh, <!-- bmbh -->
		</if>
		<if test="flag_submit != null and flag_submit != ''">
	         flag_submit, <!-- flag_submit -->
		</if>
		<if test="flag_examine != null and flag_examine != ''">
	         flag_examine, <!-- flag_examine -->
		</if>
		<if test="id_ != null and id_ != ''">
	          id_  <!-- id_ -->
	   </if>
		)VALUES(
		<if test="stmc != null and stmc != ''">
	          #{stmc, jdbcType=VARCHAR}, <!-- stmc -->
	    </if>
		<if test="djms != null and djms != ''">
	          #{djms, jdbcType=VARCHAR}, <!-- djms -->
	    </if>
		<if test="djsj != null and djsj != ''">
	          #{djsj, jdbcType=VARCHAR}, <!-- djsj -->
	    </if>
		<if test="djr != null and djr != ''">
	          #{djr, jdbcType=VARCHAR}, <!-- djr -->
	    </if>
		<if test="jszt != null and jszt != ''">
	          #{jszt, jdbcType=VARCHAR}, <!-- jszt -->
	    </if>
		<if test="shr != null and shr != ''">
	          #{shr, jdbcType=VARCHAR}, <!-- shr -->
	    </if>
		<if test="shsj != null and shsj != ''">
	          #{shsj, jdbcType=VARCHAR}, <!-- shsj -->
	    </if>
		<if test="shyj != null and shyj != ''">
	          #{shyj, jdbcType=VARCHAR}, <!-- shyj -->
	    </if>
		<if test="bmmc != null and bmmc != ''">
	          #{bmmc, jdbcType=VARCHAR}, <!-- bmmc -->
	    </if>
		<if test="bmbh != null and bmbh != ''">
	          #{bmbh, jdbcType=VARCHAR}, <!-- bmbh -->
	    </if>
		<if test="flag_submit != null and flag_submit != ''">
	          #{flag_submit, jdbcType=VARCHAR}, <!-- flag_submit -->
	    </if>
		<if test="flag_examine != null and flag_examine != ''">
	          #{flag_examine, jdbcType=VARCHAR}, <!-- flag_examine -->
	    </if>
		<if test="id_ != null and id_ != ''">
		     #{id_, jdbcType=VARCHAR}  <!-- id_ -->
	    </if>
		)
	</insert>
	
	<!-- 插入一个数据持久化对象(含所有字段) -->
	<insert id="insertAll"  parameterType="Archive_entityPO">
		INSERT INTO archive_entity (
		    <include refid="column" />
		)
		VALUES (
		    #{id_, jdbcType=VARCHAR},  <!-- id_ -->
		    #{stmc, jdbcType=VARCHAR},  <!-- stmc -->
		    #{djms, jdbcType=VARCHAR},  <!-- djms -->
		    #{djsj, jdbcType=VARCHAR},  <!-- djsj -->
		    #{djr, jdbcType=VARCHAR},  <!-- djr -->
		    #{jszt, jdbcType=VARCHAR},  <!-- jszt -->
		    #{shr, jdbcType=VARCHAR},  <!-- shr -->
		    #{shsj, jdbcType=VARCHAR},  <!-- shsj -->
		    #{shyj, jdbcType=VARCHAR},  <!-- shyj -->
		    #{bmmc, jdbcType=VARCHAR},  <!-- bmmc -->
		    #{bmbh, jdbcType=VARCHAR},  <!-- bmbh -->
		    #{flag_submit, jdbcType=VARCHAR},  <!-- flag_submit -->
		    #{flag_examine, jdbcType=VARCHAR}  <!-- flag_examine -->
		)
	</insert>

	<!-- 根据主键修改数据持久化对象 -->
	<update id="updateByKey" parameterType="Archive_entityPO">
		UPDATE archive_entity
		<set>
			<if test="id_ != null">
		          id_ = #{id_, jdbcType=VARCHAR},  <!-- id_ -->
			</if>
			<if test="stmc != null">
		          stmc = #{stmc, jdbcType=VARCHAR},  <!-- stmc -->
			</if>
			<if test="djms != null">
		          djms = #{djms, jdbcType=VARCHAR},  <!-- djms -->
			</if>
			<if test="djsj != null">
		          djsj = #{djsj, jdbcType=VARCHAR},  <!-- djsj -->
			</if>
			<if test="djr != null">
		          djr = #{djr, jdbcType=VARCHAR},  <!-- djr -->
			</if>
			<if test="jszt != null">
		          jszt = #{jszt, jdbcType=VARCHAR},  <!-- jszt -->
			</if>
			<if test="shr != null">
		          shr = #{shr, jdbcType=VARCHAR},  <!-- shr -->
			</if>
			<if test="shsj != null">
		          shsj = #{shsj, jdbcType=VARCHAR},  <!-- shsj -->
			</if>
			<if test="shyj != null">
		          shyj = #{shyj, jdbcType=VARCHAR},  <!-- shyj -->
			</if>
			<if test="bmmc != null">
		          bmmc = #{bmmc, jdbcType=VARCHAR},  <!-- bmmc -->
			</if>
			<if test="bmbh != null">
		          bmbh = #{bmbh, jdbcType=VARCHAR},  <!-- bmbh -->
			</if>
			<if test="flag_submit != null">
		          flag_submit = #{flag_submit, jdbcType=VARCHAR},  <!-- flag_submit -->
			</if>
			<if test="flag_examine != null">
		          flag_examine = #{flag_examine, jdbcType=VARCHAR},  <!-- flag_examine -->
			</if>
		</set>
		WHERE  id_ = #{id_}
	</update>
	
	<!-- 根据主键删除数据持久化对象 -->
	<delete id="deleteByKey">
		DELETE FROM archive_entity WHERE  id_ = #{id_}
	</delete>

	<!-- 根据主键查询并返回数据持久化对象 -->
	<select id="selectByKey" resultType="Archive_entityPO">
		SELECT
		<include refid="column" />
		FROM archive_entity WHERE  id_ = #{id_}
	</select>

	<!-- 根据唯一组合条件查询并返回数据持久化对象 -->
	<select id="selectOne" parameterType="Dto" resultType="Archive_entityPO">
		SELECT
		    <include refid="column" />
		FROM archive_entity
		<where>
		    <include refid="equal" />
		</where>		
	</select>

	<!-- 根据Dto查询并返回数据持久化对象集合 -->
	<select id="list" parameterType="Dto" resultType="Archive_entityPO">
		SELECT
			<include refid="column" />	
		FROM archive_entity
		<where>
		    <include refid="equal" />
		</where>	
	</select>

	<!-- 根据Dto查询并返回分页数据持久化对象集合 -->
	<select id="listPage" parameterType="Dto" resultType="Archive_entityPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FROM archive_entity
		<where>
		    <include refid="equal" />
		</where>	
	</select>
	
	<!-- 根据Dto模糊查询并返回数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="like" parameterType="Dto" resultType="Archive_entityPO">
		SELECT
			<include refid="column" />	
		FROM archive_entity
		<where>
		    <include refid="like" />
		</where>	
	</select>

	<!-- 根据Dto模糊查询并返回分页数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="likePage" parameterType="Dto" resultType="Archive_entityPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FROM archive_entity
		<where>
		    <include refid="like" />
		</where>	
	</select>
	
	<!-- 根据Dto统计行数 -->
	<select id="rows" resultType="Integer" parameterType="Dto">
		SELECT COUNT(1) AS aos_rows_ FROM archive_entity
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 根据数学表达式进行数学运算 -->
	<select id="calc" parameterType="Dto" resultType="String">
		SELECT
			${_expr}
		FROM archive_entity
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 表字段 -->
	<sql id="column">
		  id_,  <!-- id_ -->
		  stmc,  <!-- stmc -->
		  djms,  <!-- djms -->
		  djsj,  <!-- djsj -->
		  djr,  <!-- djr -->
		  jszt,  <!-- jszt -->
		  shr,  <!-- shr -->
		  shsj,  <!-- shsj -->
		  shyj,  <!-- shyj -->
		  bmmc,  <!-- bmmc -->
		  bmbh,  <!-- bmbh -->
		  flag_submit,  <!-- flag_submit -->
		  flag_examine  <!-- flag_examine -->
	</sql>
	
	<!-- 表字段(用于外表的关联时引用) -->
	<sql id="column2">
		  archive_entity.id_,  <!-- id_ -->
		  archive_entity.stmc,  <!-- stmc -->
		  archive_entity.djms,  <!-- djms -->
		  archive_entity.djsj,  <!-- djsj -->
		  archive_entity.djr,  <!-- djr -->
		  archive_entity.jszt,  <!-- jszt -->
		  archive_entity.shr,  <!-- shr -->
		  archive_entity.shsj,  <!-- shsj -->
		  archive_entity.shyj,  <!-- shyj -->
		  archive_entity.bmmc,  <!-- bmmc -->
		  archive_entity.bmbh,  <!-- bmbh -->
		  archive_entity.flag_submit,  <!-- flag_submit -->
		  archive_entity.flag_examine  <!-- flag_examine -->
	</sql>

	<!-- Where精确匹配字段 -->
	<sql id="equal">
	    <if test="id_ != null and id_ != ''">
		      AND id_ = #{id_}  <!-- id_ -->
		</if>
	    <if test="stmc != null and stmc != ''">
		      AND stmc = #{stmc}  <!-- stmc -->
		</if>
	    <if test="djms != null and djms != ''">
		      AND djms = #{djms}  <!-- djms -->
		</if>
	    <if test="djsj != null and djsj != ''">
		      AND djsj = #{djsj}  <!-- djsj -->
		</if>
	    <if test="djr != null and djr != ''">
		      AND djr = #{djr}  <!-- djr -->
		</if>
	    <if test="jszt != null and jszt != ''">
		      AND jszt = #{jszt}  <!-- jszt -->
		</if>
	    <if test="shr != null and shr != ''">
		      AND shr = #{shr}  <!-- shr -->
		</if>
	    <if test="shsj != null and shsj != ''">
		      AND shsj = #{shsj}  <!-- shsj -->
		</if>
	    <if test="shyj != null and shyj != ''">
		      AND shyj = #{shyj}  <!-- shyj -->
		</if>
	    <if test="bmmc != null and bmmc != ''">
		      AND bmmc = #{bmmc}  <!-- bmmc -->
		</if>
	    <if test="bmbh != null and bmbh != ''">
		      AND bmbh = #{bmbh}  <!-- bmbh -->
		</if>
	    <if test="flag_submit != null and flag_submit != ''">
		      AND flag_submit = #{flag_submit}  <!-- flag_submit -->
		</if>
	    <if test="flag_examine != null and flag_examine != ''">
		      AND flag_examine = #{flag_examine}  <!-- flag_examine -->
		</if>
	</sql>
	
	<!-- Where模糊匹配字段 -->
	<sql id="like">
	    <if test="id_ != null and id_ != ''">
		      AND id_ like '%${id_}%'  <!-- id_ -->
		</if>
	    <if test="stmc != null and stmc != ''">
		      AND stmc like '%${stmc}%'  <!-- stmc -->
		</if>
	    <if test="djms != null and djms != ''">
		      AND djms like '%${djms}%'  <!-- djms -->
		</if>
	    <if test="djsj != null and djsj != ''">
		      AND djsj like '%${djsj}%'  <!-- djsj -->
		</if>
	    <if test="djr != null and djr != ''">
		      AND djr like '%${djr}%'  <!-- djr -->
		</if>
	    <if test="jszt != null and jszt != ''">
		      AND jszt like '%${jszt}%'  <!-- jszt -->
		</if>
	    <if test="shr != null and shr != ''">
		      AND shr like '%${shr}%'  <!-- shr -->
		</if>
	    <if test="shsj != null and shsj != ''">
		      AND shsj like '%${shsj}%'  <!-- shsj -->
		</if>
	    <if test="shyj != null and shyj != ''">
		      AND shyj like '%${shyj}%'  <!-- shyj -->
		</if>
	    <if test="bmmc != null and bmmc != ''">
		      AND bmmc like '%${bmmc}%'  <!-- bmmc -->
		</if>
	    <if test="bmbh != null and bmbh != ''">
		      AND bmbh like '%${bmbh}%'  <!-- bmbh -->
		</if>
	    <if test="flag_submit != null and flag_submit != ''">
		      AND flag_submit like '%${flag_submit}%'  <!-- flag_submit -->
		</if>
	    <if test="flag_examine != null and flag_examine != ''">
		      AND flag_examine like '%${flag_examine}%'  <!-- flag_examine -->
		</if>
	</sql>
	
</mapper>
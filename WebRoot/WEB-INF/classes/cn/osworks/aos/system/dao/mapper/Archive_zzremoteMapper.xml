<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- archive_zzremote[archive_zzremote]SQLMapper自动映射 -->
<!--  注意:此文件由AOS平台自动生成-禁止手工修改 2020-09-09 15:29:27 -->
<mapper namespace="cn.osworks.aos.system.dao.mapper.Archive_zzremoteMapper">
	
	<!-- 插入一个数据持久化对象(插入字段为传入PO实体的非空属性) -->
	<insert id="insert"  parameterType="Archive_zzremotePO">
		INSERT INTO archive_zzremote (
		<if test="zzbh != null and zzbh != ''">
	         zzbh, <!-- zzbh -->
		</if>
		<if test="xm != null and xm != ''">
	         xm, <!-- xm -->
		</if>
		<if test="xb != null and xb != ''">
	         xb, <!-- xb -->
		</if>
		<if test="mzgj != null and mzgj != ''">
	         mzgj, <!-- mzgj -->
		</if>
		<if test="cs != null and cs != ''">
	         cs, <!-- cs -->
		</if>
		<if test="dz != null and dz != ''">
	         dz, <!-- dz -->
		</if>
		<if test="sfzh != null and sfzh != ''">
	         sfzh, <!-- sfzh -->
		</if>
		<if test="qfjg != null and qfjg != ''">
	         qfjg, <!-- qfjg -->
		</if>
		<if test="state != null and state != ''">
	         state, <!-- state -->
		</if>
		<if test="bz != null and bz != ''">
	         bz, <!-- bz -->
		</if>
		<if test="tpsj != null and tpsj != ''">
	         tpsj, <!-- tpsj -->
		</if>
		<if test="id_ != null and id_ != ''">
	          id_  <!-- id_ -->
	   </if>
		)VALUES(
		<if test="zzbh != null and zzbh != ''">
	          #{zzbh, jdbcType=VARCHAR}, <!-- zzbh -->
	    </if>
		<if test="xm != null and xm != ''">
	          #{xm, jdbcType=VARCHAR}, <!-- xm -->
	    </if>
		<if test="xb != null and xb != ''">
	          #{xb, jdbcType=VARCHAR}, <!-- xb -->
	    </if>
		<if test="mzgj != null and mzgj != ''">
	          #{mzgj, jdbcType=VARCHAR}, <!-- mzgj -->
	    </if>
		<if test="cs != null and cs != ''">
	          #{cs, jdbcType=VARCHAR}, <!-- cs -->
	    </if>
		<if test="dz != null and dz != ''">
	          #{dz, jdbcType=VARCHAR}, <!-- dz -->
	    </if>
		<if test="sfzh != null and sfzh != ''">
	          #{sfzh, jdbcType=VARCHAR}, <!-- sfzh -->
	    </if>
		<if test="qfjg != null and qfjg != ''">
	          #{qfjg, jdbcType=VARCHAR}, <!-- qfjg -->
	    </if>
		<if test="state != null and state != ''">
	          #{state, jdbcType=VARCHAR}, <!-- state -->
	    </if>
		<if test="bz != null and bz != ''">
	          #{bz, jdbcType=VARCHAR}, <!-- bz -->
	    </if>
		<if test="tpsj != null and tpsj != ''">
	          #{tpsj, jdbcType=VARCHAR}, <!-- tpsj -->
	    </if>
		<if test="id_ != null and id_ != ''">
		     #{id_, jdbcType=VARCHAR}  <!-- id_ -->
	    </if>
		)
	</insert>
	
	<!-- 插入一个数据持久化对象(含所有字段) -->
	<insert id="insertAll"  parameterType="Archive_zzremotePO">
		INSERT INTO archive_zzremote (
		    <include refid="column" />
		)
		VALUES (
		    #{id_, jdbcType=VARCHAR},  <!-- id_ -->
		    #{zzbh, jdbcType=VARCHAR},  <!-- zzbh -->
		    #{xm, jdbcType=VARCHAR},  <!-- xm -->
		    #{xb, jdbcType=VARCHAR},  <!-- xb -->
		    #{mzgj, jdbcType=VARCHAR},  <!-- mzgj -->
		    #{cs, jdbcType=VARCHAR},  <!-- cs -->
		    #{dz, jdbcType=VARCHAR},  <!-- dz -->
		    #{sfzh, jdbcType=VARCHAR},  <!-- sfzh -->
		    #{qfjg, jdbcType=VARCHAR},  <!-- qfjg -->
		    #{state, jdbcType=VARCHAR},  <!-- state -->
		    #{bz, jdbcType=VARCHAR},  <!-- bz -->
		    #{tpsj, jdbcType=VARCHAR}  <!-- tpsj -->
		)
	</insert>

	<!-- 根据主键修改数据持久化对象 -->
	<update id="updateByKey" parameterType="Archive_zzremotePO">
		UPDATE archive_zzremote
		<set>
			<if test="id_ != null">
		          id_ = #{id_, jdbcType=VARCHAR},  <!-- id_ -->
			</if>
			<if test="zzbh != null">
		          zzbh = #{zzbh, jdbcType=VARCHAR},  <!-- zzbh -->
			</if>
			<if test="xm != null">
		          xm = #{xm, jdbcType=VARCHAR},  <!-- xm -->
			</if>
			<if test="xb != null">
		          xb = #{xb, jdbcType=VARCHAR},  <!-- xb -->
			</if>
			<if test="mzgj != null">
		          mzgj = #{mzgj, jdbcType=VARCHAR},  <!-- mzgj -->
			</if>
			<if test="cs != null">
		          cs = #{cs, jdbcType=VARCHAR},  <!-- cs -->
			</if>
			<if test="dz != null">
		          dz = #{dz, jdbcType=VARCHAR},  <!-- dz -->
			</if>
			<if test="sfzh != null">
		          sfzh = #{sfzh, jdbcType=VARCHAR},  <!-- sfzh -->
			</if>
			<if test="qfjg != null">
		          qfjg = #{qfjg, jdbcType=VARCHAR},  <!-- qfjg -->
			</if>
			<if test="state != null">
		          state = #{state, jdbcType=VARCHAR},  <!-- state -->
			</if>
			<if test="bz != null">
		          bz = #{bz, jdbcType=VARCHAR},  <!-- bz -->
			</if>
			<if test="tpsj != null">
		          tpsj = #{tpsj, jdbcType=VARCHAR},  <!-- tpsj -->
			</if>
		</set>
		WHERE  id_ = #{id_}
	</update>
	
	<!-- 根据主键删除数据持久化对象 -->
	<delete id="deleteByKey">
		DELETE FROM archive_zzremote WHERE  id_ = #{id_}
	</delete>

	<!-- 根据主键查询并返回数据持久化对象 -->
	<select id="selectByKey" resultType="Archive_zzremotePO">
		SELECT
		<include refid="column" />
		FROM archive_zzremote WHERE  id_ = #{id_}
	</select>

	<!-- 根据唯一组合条件查询并返回数据持久化对象 -->
	<select id="selectOne" parameterType="Dto" resultType="Archive_zzremotePO">
		SELECT
		    <include refid="column" />
		FROM archive_zzremote
		<where>
		    <include refid="equal" />
		</where>		
	</select>

	<!-- 根据Dto查询并返回数据持久化对象集合 -->
	<select id="list" parameterType="Dto" resultType="Archive_zzremotePO">
		SELECT
			<include refid="column" />	
		FROM archive_zzremote
		<where>
		    <include refid="equal" />
		</where>	
	</select>

	<!-- 根据Dto查询并返回分页数据持久化对象集合 -->
	<select id="listPage" parameterType="Dto" resultType="Archive_zzremotePO" useCache="false">
	    SELECT
			<include refid="column" />	
		FROM archive_zzremote
		<where>
		    <include refid="equal" />
		</where>	
	</select>
	
	<!-- 根据Dto模糊查询并返回数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="like" parameterType="Dto" resultType="Archive_zzremotePO">
		SELECT
			<include refid="column" />	
		FROM archive_zzremote
		<where>
		    <include refid="like" />
		</where>	
	</select>

	<!-- 根据Dto模糊查询并返回分页数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="likePage" parameterType="Dto" resultType="Archive_zzremotePO" useCache="false">
	    SELECT
			<include refid="column" />	
		FROM archive_zzremote
		<where>
		    <include refid="like" />
		</where>	
	</select>
	
	<!-- 根据Dto统计行数 -->
	<select id="rows" resultType="Integer" parameterType="Dto">
		SELECT COUNT(1) AS aos_rows_ FROM archive_zzremote
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 根据数学表达式进行数学运算 -->
	<select id="calc" parameterType="Dto" resultType="String">
		SELECT
			${_expr}
		FROM archive_zzremote
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 表字段 -->
	<sql id="column">
		  id_,  <!-- id_ -->
		  zzbh,  <!-- zzbh -->
		  xm,  <!-- xm -->
		  xb,  <!-- xb -->
		  mzgj,  <!-- mzgj -->
		  cs,  <!-- cs -->
		  dz,  <!-- dz -->
		  sfzh,  <!-- sfzh -->
		  qfjg,  <!-- qfjg -->
		  state,  <!-- state -->
		  bz,  <!-- bz -->
		  tpsj  <!-- tpsj -->
	</sql>
	
	<!-- 表字段(用于外表的关联时引用) -->
	<sql id="column2">
		  archive_zzremote.id_,  <!-- id_ -->
		  archive_zzremote.zzbh,  <!-- zzbh -->
		  archive_zzremote.xm,  <!-- xm -->
		  archive_zzremote.xb,  <!-- xb -->
		  archive_zzremote.mzgj,  <!-- mzgj -->
		  archive_zzremote.cs,  <!-- cs -->
		  archive_zzremote.dz,  <!-- dz -->
		  archive_zzremote.sfzh,  <!-- sfzh -->
		  archive_zzremote.qfjg,  <!-- qfjg -->
		  archive_zzremote.state,  <!-- state -->
		  archive_zzremote.bz,  <!-- bz -->
		  archive_zzremote.tpsj  <!-- tpsj -->
	</sql>

	<!-- Where精确匹配字段 -->
	<sql id="equal">
	    <if test="id_ != null and id_ != ''">
		      AND id_ = #{id_}  <!-- id_ -->
		</if>
	    <if test="zzbh != null and zzbh != ''">
		      AND zzbh = #{zzbh}  <!-- zzbh -->
		</if>
	    <if test="xm != null and xm != ''">
		      AND xm = #{xm}  <!-- xm -->
		</if>
	    <if test="xb != null and xb != ''">
		      AND xb = #{xb}  <!-- xb -->
		</if>
	    <if test="mzgj != null and mzgj != ''">
		      AND mzgj = #{mzgj}  <!-- mzgj -->
		</if>
	    <if test="cs != null and cs != ''">
		      AND cs = #{cs}  <!-- cs -->
		</if>
	    <if test="dz != null and dz != ''">
		      AND dz = #{dz}  <!-- dz -->
		</if>
	    <if test="sfzh != null and sfzh != ''">
		      AND sfzh = #{sfzh}  <!-- sfzh -->
		</if>
	    <if test="qfjg != null and qfjg != ''">
		      AND qfjg = #{qfjg}  <!-- qfjg -->
		</if>
	    <if test="state != null and state != ''">
		      AND state = #{state}  <!-- state -->
		</if>
	    <if test="bz != null and bz != ''">
		      AND bz = #{bz}  <!-- bz -->
		</if>
	    <if test="tpsj != null and tpsj != ''">
		      AND tpsj = #{tpsj}  <!-- tpsj -->
		</if>
	</sql>
	
	<!-- Where模糊匹配字段 -->
	<sql id="like">
	    <if test="id_ != null and id_ != ''">
		      AND id_ like '%${id_}%'  <!-- id_ -->
		</if>
	    <if test="zzbh != null and zzbh != ''">
		      AND zzbh like '%${zzbh}%'  <!-- zzbh -->
		</if>
	    <if test="xm != null and xm != ''">
		      AND xm like '%${xm}%'  <!-- xm -->
		</if>
	    <if test="xb != null and xb != ''">
		      AND xb like '%${xb}%'  <!-- xb -->
		</if>
	    <if test="mzgj != null and mzgj != ''">
		      AND mzgj like '%${mzgj}%'  <!-- mzgj -->
		</if>
	    <if test="cs != null and cs != ''">
		      AND cs like '%${cs}%'  <!-- cs -->
		</if>
	    <if test="dz != null and dz != ''">
		      AND dz like '%${dz}%'  <!-- dz -->
		</if>
	    <if test="sfzh != null and sfzh != ''">
		      AND sfzh like '%${sfzh}%'  <!-- sfzh -->
		</if>
	    <if test="qfjg != null and qfjg != ''">
		      AND qfjg like '%${qfjg}%'  <!-- qfjg -->
		</if>
	    <if test="state != null and state != ''">
		      AND state like '%${state}%'  <!-- state -->
		</if>
	    <if test="bz != null and bz != ''">
		      AND bz like '%${bz}%'  <!-- bz -->
		</if>
	    <if test="tpsj != null and tpsj != ''">
		      AND tpsj like '%${tpsj}%'  <!-- tpsj -->
		</if>
	</sql>
	
</mapper>
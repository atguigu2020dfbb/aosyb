<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- Aos_sys_qzj_catalog[aos_sys_qzj_catalog]SQLMapper自动映射 -->
<!--  注意:此文件由AOS平台自动生成-禁止手工修改 2020-09-01 20:22:23 -->
<mapper namespace="cn.osworks.aos.system.dao.mapper.Aos_sys_qzj_catalogMapper">
	
	<!-- 插入一个数据持久化对象(插入字段为传入PO实体的非空属性) -->
	<insert id="insert"  parameterType="Aos_sys_qzj_catalogPO">
		INSERT INTO aos_sys_qzj_catalog (
		<if test="bz != null and bz != ''">
	         bz, <!-- bz -->
		</if>
		<if test="rq != null and rq != ''">
	         rq, <!-- rq -->
		</if>
		<if test="tm != null and tm != ''">
	         tm, <!-- tm -->
		</if>
		<if test="ys != null">
	         ys, <!-- ys -->
		</if>
		<if test="qzh != null and qzh != ''">
	         qzh, <!-- qzh -->
		</if>
		<if test="nd != null and nd != ''">
	         nd, <!-- nd -->
		</if>
		<if test="zrz != null and zrz != ''">
	         zrz, <!-- zrz -->
		</if>
		<if test="jh != null and jh != ''">
	         jh, <!-- jh -->
		</if>
		<if test="lb != null and lb != ''">
	         lb, <!-- lb -->
		</if>
		<if test="_lrr != null and _lrr != ''">
	         _lrr, <!-- _lrr -->
		</if>
		<if test="_lrrq != null and _lrrq != ''">
	         _lrrq, <!-- _lrrq -->
		</if>
		<if test="_classtree != null and _classtree != ''">
	         _classtree, <!-- _classtree -->
		</if>
		<if test="_jy != null and _jy != ''">
	         _jy, <!-- _jy -->
		</if>
		<if test="_jd != null and _jd != ''">
	         _jd, <!-- _jd -->
		</if>
		<if test="_path != null">
	         _path, <!-- _path -->
		</if>
		<if test="tid != null and tid != ''">
	         tid, <!-- tid -->
		</if>
		<if test="cz_bh != null and cz_bh != ''">
	         cz_bh, <!-- cz_bh -->
		</if>
		<if test="qzdw != null and qzdw != ''">
	         qzdw, <!-- qzdw -->
		</if>
		<if test="lh != null and lh != ''">
	         lh, <!-- lh -->
		</if>
		<if test="qzjbh != null and qzjbh != ''">
	         qzjbh, <!-- qzjbh -->
		</if>
		<if test="id_ != null and id_ != ''">
	          id_  <!-- id_ -->
	   </if>
		)VALUES(
		<if test="bz != null and bz != ''">
	          #{bz, jdbcType=VARCHAR}, <!-- bz -->
	    </if>
		<if test="rq != null and rq != ''">
	          #{rq, jdbcType=VARCHAR}, <!-- rq -->
	    </if>
		<if test="tm != null and tm != ''">
	          #{tm, jdbcType=VARCHAR}, <!-- tm -->
	    </if>
		<if test="ys != null">
	          #{ys, jdbcType=INTEGER}, <!-- ys -->
	    </if>
		<if test="qzh != null and qzh != ''">
	          #{qzh, jdbcType=VARCHAR}, <!-- qzh -->
	    </if>
		<if test="nd != null and nd != ''">
	          #{nd, jdbcType=VARCHAR}, <!-- nd -->
	    </if>
		<if test="zrz != null and zrz != ''">
	          #{zrz, jdbcType=VARCHAR}, <!-- zrz -->
	    </if>
		<if test="jh != null and jh != ''">
	          #{jh, jdbcType=VARCHAR}, <!-- jh -->
	    </if>
		<if test="lb != null and lb != ''">
	          #{lb, jdbcType=VARCHAR}, <!-- lb -->
	    </if>
		<if test="_lrr != null and _lrr != ''">
	          #{_lrr, jdbcType=VARCHAR}, <!-- _lrr -->
	    </if>
		<if test="_lrrq != null and _lrrq != ''">
	          #{_lrrq, jdbcType=VARCHAR}, <!-- _lrrq -->
	    </if>
		<if test="_classtree != null and _classtree != ''">
	          #{_classtree, jdbcType=VARCHAR}, <!-- _classtree -->
	    </if>
		<if test="_jy != null and _jy != ''">
	          #{_jy, jdbcType=VARCHAR}, <!-- _jy -->
	    </if>
		<if test="_jd != null and _jd != ''">
	          #{_jd, jdbcType=VARCHAR}, <!-- _jd -->
	    </if>
		<if test="_path != null">
	          #{_path, jdbcType=INTEGER}, <!-- _path -->
	    </if>
		<if test="tid != null and tid != ''">
	          #{tid, jdbcType=VARCHAR}, <!-- tid -->
	    </if>
		<if test="cz_bh != null and cz_bh != ''">
	          #{cz_bh, jdbcType=VARCHAR}, <!-- cz_bh -->
	    </if>
		<if test="qzdw != null and qzdw != ''">
	          #{qzdw, jdbcType=VARCHAR}, <!-- qzdw -->
	    </if>
		<if test="lh != null and lh != ''">
	          #{lh, jdbcType=VARCHAR}, <!-- lh -->
	    </if>
		<if test="qzjbh != null and qzjbh != ''">
	          #{qzjbh, jdbcType=VARCHAR}, <!-- qzjbh -->
	    </if>
		<if test="id_ != null and id_ != ''">
		     #{id_, jdbcType=VARCHAR}  <!-- id_ -->
	    </if>
		)
	</insert>
	
	<!-- 插入一个数据持久化对象(含所有字段) -->
	<insert id="insertAll"  parameterType="Aos_sys_qzj_catalogPO">
		INSERT INTO aos_sys_qzj_catalog (
		    <include refid="column" />
		)
		VALUES (
		    #{id_, jdbcType=VARCHAR},  <!-- id_ -->
		    #{bz, jdbcType=VARCHAR},  <!-- bz -->
		    #{rq, jdbcType=VARCHAR},  <!-- rq -->
		    #{tm, jdbcType=VARCHAR},  <!-- tm -->
		    #{ys, jdbcType=INTEGER},  <!-- ys -->
		    #{qzh, jdbcType=VARCHAR},  <!-- qzh -->
		    #{nd, jdbcType=VARCHAR},  <!-- nd -->
		    #{zrz, jdbcType=VARCHAR},  <!-- zrz -->
		    #{jh, jdbcType=VARCHAR},  <!-- jh -->
		    #{lb, jdbcType=VARCHAR},  <!-- lb -->
		    #{_lrr, jdbcType=VARCHAR},  <!-- _lrr -->
		    #{_lrrq, jdbcType=VARCHAR},  <!-- _lrrq -->
		    #{_classtree, jdbcType=VARCHAR},  <!-- _classtree -->
		    #{_jy, jdbcType=VARCHAR},  <!-- _jy -->
		    #{_jd, jdbcType=VARCHAR},  <!-- _jd -->
		    #{_path, jdbcType=INTEGER},  <!-- _path -->
		    #{tid, jdbcType=VARCHAR},  <!-- tid -->
		    #{cz_bh, jdbcType=VARCHAR},  <!-- cz_bh -->
		    #{qzdw, jdbcType=VARCHAR},  <!-- qzdw -->
		    #{lh, jdbcType=VARCHAR},  <!-- lh -->
		    #{qzjbh, jdbcType=VARCHAR}  <!-- qzjbh -->
		)
	</insert>

	<!-- 根据主键修改数据持久化对象 -->
	<update id="updateByKey" parameterType="Aos_sys_qzj_catalogPO">
		UPDATE aos_sys_qzj_catalog
		<set>
			<if test="id_ != null">
		          id_ = #{id_, jdbcType=VARCHAR},  <!-- id_ -->
			</if>
			<if test="bz != null">
		          bz = #{bz, jdbcType=VARCHAR},  <!-- bz -->
			</if>
			<if test="rq != null">
		          rq = #{rq, jdbcType=VARCHAR},  <!-- rq -->
			</if>
			<if test="tm != null">
		          tm = #{tm, jdbcType=VARCHAR},  <!-- tm -->
			</if>
			<if test="ys != null">
		          ys = #{ys, jdbcType=INTEGER},  <!-- ys -->
			</if>
			<if test="qzh != null">
		          qzh = #{qzh, jdbcType=VARCHAR},  <!-- qzh -->
			</if>
			<if test="nd != null">
		          nd = #{nd, jdbcType=VARCHAR},  <!-- nd -->
			</if>
			<if test="zrz != null">
		          zrz = #{zrz, jdbcType=VARCHAR},  <!-- zrz -->
			</if>
			<if test="jh != null">
		          jh = #{jh, jdbcType=VARCHAR},  <!-- jh -->
			</if>
			<if test="lb != null">
		          lb = #{lb, jdbcType=VARCHAR},  <!-- lb -->
			</if>
			<if test="_lrr != null">
		          _lrr = #{_lrr, jdbcType=VARCHAR},  <!-- _lrr -->
			</if>
			<if test="_lrrq != null">
		          _lrrq = #{_lrrq, jdbcType=VARCHAR},  <!-- _lrrq -->
			</if>
			<if test="_classtree != null">
		          _classtree = #{_classtree, jdbcType=VARCHAR},  <!-- _classtree -->
			</if>
			<if test="_jy != null">
		          _jy = #{_jy, jdbcType=VARCHAR},  <!-- _jy -->
			</if>
			<if test="_jd != null">
		          _jd = #{_jd, jdbcType=VARCHAR},  <!-- _jd -->
			</if>
			<if test="_path != null">
		          _path = #{_path, jdbcType=INTEGER},  <!-- _path -->
			</if>
			<if test="tid != null">
		          tid = #{tid, jdbcType=VARCHAR},  <!-- tid -->
			</if>
			<if test="cz_bh != null">
		          cz_bh = #{cz_bh, jdbcType=VARCHAR},  <!-- cz_bh -->
			</if>
			<if test="qzdw != null">
		          qzdw = #{qzdw, jdbcType=VARCHAR},  <!-- qzdw -->
			</if>
			<if test="lh != null">
		          lh = #{lh, jdbcType=VARCHAR},  <!-- lh -->
			</if>
			<if test="qzjbh != null">
		          qzjbh = #{qzjbh, jdbcType=VARCHAR},  <!-- qzjbh -->
			</if>
		</set>
		WHERE  id_ = #{id_}
	</update>
	
	<!-- 根据主键删除数据持久化对象 -->
	<delete id="deleteByKey">
		DELETE FROM aos_sys_qzj_catalog WHERE  id_ = #{id_}
	</delete>

	<!-- 根据主键查询并返回数据持久化对象 -->
	<select id="selectByKey" resultType="Aos_sys_qzj_catalogPO">
		SELECT
		<include refid="column" />
		FROM aos_sys_qzj_catalog WHERE  id_ = #{id_}
	</select>

	<!-- 根据唯一组合条件查询并返回数据持久化对象 -->
	<select id="selectOne" parameterType="Dto" resultType="Aos_sys_qzj_catalogPO">
		SELECT
		    <include refid="column" />
		FROM aos_sys_qzj_catalog
		<where>
		    <include refid="equal" />
		</where>		
	</select>

	<!-- 根据Dto查询并返回数据持久化对象集合 -->
	<select id="list" parameterType="Dto" resultType="Aos_sys_qzj_catalogPO">
		SELECT
			<include refid="column" />	
		FROM aos_sys_qzj_catalog
		<where>
		    <include refid="equal" />
		</where>	
	</select>

	<!-- 根据Dto查询并返回分页数据持久化对象集合 -->
	<select id="listPage" parameterType="Dto" resultType="Aos_sys_qzj_catalogPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FROM aos_sys_qzj_catalog
		<where>
		    <include refid="equal" />
		</where>	
	</select>
	
	<!-- 根据Dto模糊查询并返回数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="like" parameterType="Dto" resultType="Aos_sys_qzj_catalogPO">
		SELECT
			<include refid="column" />	
		FROM aos_sys_qzj_catalog
		<where>
		    <include refid="like" />
		</where>	
	</select>

	<!-- 根据Dto模糊查询并返回分页数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="likePage" parameterType="Dto" resultType="Aos_sys_qzj_catalogPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FROM aos_sys_qzj_catalog
		<where>
		    <include refid="like" />
		</where>	
	</select>
	
	<!-- 根据Dto统计行数 -->
	<select id="rows" resultType="Integer" parameterType="Dto">
		SELECT COUNT(1) AS aos_rows_ FROM aos_sys_qzj_catalog
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 根据数学表达式进行数学运算 -->
	<select id="calc" parameterType="Dto" resultType="String">
		SELECT
			${_expr}
		FROM aos_sys_qzj_catalog
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 表字段 -->
	<sql id="column">
		  id_,  <!-- id_ -->
		  bz,  <!-- bz -->
		  rq,  <!-- rq -->
		  tm,  <!-- tm -->
		  ys,  <!-- ys -->
		  qzh,  <!-- qzh -->
		  nd,  <!-- nd -->
		  zrz,  <!-- zrz -->
		  jh,  <!-- jh -->
		  lb,  <!-- lb -->
		  _lrr,  <!-- _lrr -->
		  _lrrq,  <!-- _lrrq -->
		  _classtree,  <!-- _classtree -->
		  _jy,  <!-- _jy -->
		  _jd,  <!-- _jd -->
		  _path,  <!-- _path -->
		  tid,  <!-- tid -->
		  cz_bh,  <!-- cz_bh -->
		  qzdw,  <!-- qzdw -->
		  lh,  <!-- lh -->
		  qzjbh  <!-- qzjbh -->
	</sql>
	
	<!-- 表字段(用于外表的关联时引用) -->
	<sql id="column2">
		  aos_sys_qzj_catalog.id_,  <!-- id_ -->
		  aos_sys_qzj_catalog.bz,  <!-- bz -->
		  aos_sys_qzj_catalog.rq,  <!-- rq -->
		  aos_sys_qzj_catalog.tm,  <!-- tm -->
		  aos_sys_qzj_catalog.ys,  <!-- ys -->
		  aos_sys_qzj_catalog.qzh,  <!-- qzh -->
		  aos_sys_qzj_catalog.nd,  <!-- nd -->
		  aos_sys_qzj_catalog.zrz,  <!-- zrz -->
		  aos_sys_qzj_catalog.jh,  <!-- jh -->
		  aos_sys_qzj_catalog.lb,  <!-- lb -->
		  aos_sys_qzj_catalog._lrr,  <!-- _lrr -->
		  aos_sys_qzj_catalog._lrrq,  <!-- _lrrq -->
		  aos_sys_qzj_catalog._classtree,  <!-- _classtree -->
		  aos_sys_qzj_catalog._jy,  <!-- _jy -->
		  aos_sys_qzj_catalog._jd,  <!-- _jd -->
		  aos_sys_qzj_catalog._path,  <!-- _path -->
		  aos_sys_qzj_catalog.tid,  <!-- tid -->
		  aos_sys_qzj_catalog.cz_bh,  <!-- cz_bh -->
		  aos_sys_qzj_catalog.qzdw,  <!-- qzdw -->
		  aos_sys_qzj_catalog.lh,  <!-- lh -->
		  aos_sys_qzj_catalog.qzjbh  <!-- qzjbh -->
	</sql>

	<!-- Where精确匹配字段 -->
	<sql id="equal">
	    <if test="id_ != null and id_ != ''">
		      AND id_ = #{id_}  <!-- id_ -->
		</if>
	    <if test="bz != null and bz != ''">
		      AND bz = #{bz}  <!-- bz -->
		</if>
	    <if test="rq != null and rq != ''">
		      AND rq = #{rq}  <!-- rq -->
		</if>
	    <if test="tm != null and tm != ''">
		      AND tm = #{tm}  <!-- tm -->
		</if>
	   <if test="ys != null ">
		      AND ys = #{ys}  <!-- ys -->
		</if>
	    <if test="qzh != null and qzh != ''">
		      AND qzh = #{qzh}  <!-- qzh -->
		</if>
	    <if test="nd != null and nd != ''">
		      AND nd = #{nd}  <!-- nd -->
		</if>
	    <if test="zrz != null and zrz != ''">
		      AND zrz = #{zrz}  <!-- zrz -->
		</if>
	    <if test="jh != null and jh != ''">
		      AND jh = #{jh}  <!-- jh -->
		</if>
	    <if test="lb != null and lb != ''">
		      AND lb = #{lb}  <!-- lb -->
		</if>
	    <if test="_lrr != null and _lrr != ''">
		      AND _lrr = #{_lrr}  <!-- _lrr -->
		</if>
	    <if test="_lrrq != null and _lrrq != ''">
		      AND _lrrq = #{_lrrq}  <!-- _lrrq -->
		</if>
	    <if test="_classtree != null and _classtree != ''">
		      AND _classtree = #{_classtree}  <!-- _classtree -->
		</if>
	    <if test="_jy != null and _jy != ''">
		      AND _jy = #{_jy}  <!-- _jy -->
		</if>
	    <if test="_jd != null and _jd != ''">
		      AND _jd = #{_jd}  <!-- _jd -->
		</if>
	   <if test="_path != null ">
		      AND _path = #{_path}  <!-- _path -->
		</if>
	    <if test="tid != null and tid != ''">
		      AND tid = #{tid}  <!-- tid -->
		</if>
	    <if test="cz_bh != null and cz_bh != ''">
		      AND cz_bh = #{cz_bh}  <!-- cz_bh -->
		</if>
	    <if test="qzdw != null and qzdw != ''">
		      AND qzdw = #{qzdw}  <!-- qzdw -->
		</if>
	    <if test="lh != null and lh != ''">
		      AND lh = #{lh}  <!-- lh -->
		</if>
	    <if test="qzjbh != null and qzjbh != ''">
		      AND qzjbh = #{qzjbh}  <!-- qzjbh -->
		</if>
	</sql>
	
	<!-- Where模糊匹配字段 -->
	<sql id="like">
	    <if test="id_ != null and id_ != ''">
		      AND id_ like '%${id_}%'  <!-- id_ -->
		</if>
	    <if test="bz != null and bz != ''">
		      AND bz like '%${bz}%'  <!-- bz -->
		</if>
	    <if test="rq != null and rq != ''">
		      AND rq like '%${rq}%'  <!-- rq -->
		</if>
	    <if test="tm != null and tm != ''">
		      AND tm like '%${tm}%'  <!-- tm -->
		</if>
	    <if test="qzh != null and qzh != ''">
		      AND qzh like '%${qzh}%'  <!-- qzh -->
		</if>
	    <if test="nd != null and nd != ''">
		      AND nd like '%${nd}%'  <!-- nd -->
		</if>
	    <if test="zrz != null and zrz != ''">
		      AND zrz like '%${zrz}%'  <!-- zrz -->
		</if>
	    <if test="jh != null and jh != ''">
		      AND jh like '%${jh}%'  <!-- jh -->
		</if>
	    <if test="lb != null and lb != ''">
		      AND lb like '%${lb}%'  <!-- lb -->
		</if>
	    <if test="_lrr != null and _lrr != ''">
		      AND _lrr like '%${_lrr}%'  <!-- _lrr -->
		</if>
	    <if test="_lrrq != null and _lrrq != ''">
		      AND _lrrq like '%${_lrrq}%'  <!-- _lrrq -->
		</if>
	    <if test="_classtree != null and _classtree != ''">
		      AND _classtree like '%${_classtree}%'  <!-- _classtree -->
		</if>
	    <if test="_jy != null and _jy != ''">
		      AND _jy like '%${_jy}%'  <!-- _jy -->
		</if>
	    <if test="_jd != null and _jd != ''">
		      AND _jd like '%${_jd}%'  <!-- _jd -->
		</if>
	    <if test="tid != null and tid != ''">
		      AND tid like '%${tid}%'  <!-- tid -->
		</if>
	    <if test="cz_bh != null and cz_bh != ''">
		      AND cz_bh like '%${cz_bh}%'  <!-- cz_bh -->
		</if>
	    <if test="qzdw != null and qzdw != ''">
		      AND qzdw like '%${qzdw}%'  <!-- qzdw -->
		</if>
	    <if test="lh != null and lh != ''">
		      AND lh like '%${lh}%'  <!-- lh -->
		</if>
	    <if test="qzjbh != null and qzjbh != ''">
		      AND qzjbh like '%${qzjbh}%'  <!-- qzjbh -->
		</if>
	</sql>
	
</mapper>
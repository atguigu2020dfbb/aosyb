<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- depot_rk[depot_rk]SQLMapper自动映射 -->
<!--  注意:此文件由AOS平台自动生成-禁止手工修改 2020-07-06 15:12:26 -->
<mapper namespace="cn.osworks.aos.system.dao.mapper.Depot_lyxgMapper">
	
	<!-- 插入一个数据持久化对象(插入字段为传入PO实体的非空属性) -->
	<insert id="insert"  parameterType="LYXG_PO">
		INSERT INTO LYXG (
		<if test="sxh != null and sxh != ''">
	         sxh, <!-- rkdh -->
		</if>
		<if test="djbh != null and djbh != ''">
			djbh, <!-- rkr -->
		</if>
		<if test="cddw != null and cddw != ''">
			cddw, <!-- rkyy -->
		</if>
		<if test="cdrxm != null and cdrxm != ''">
			cdrxm, <!-- yckdh -->
		</if>
		<if test="tm != null and tm != ''">
			tm, <!-- rksj -->
		</if>
		<if test="lyxgqk != null and lyxgqk != ''">
			lyxgqk, <!-- rksl -->
		</if>
		<if test="djr != null and djr != ''">
			djr, <!-- rkzt -->
		</if>
		<if test="djsj != null and djsj != ''">
			djsj, <!-- bz -->
		</if>
		<if test="bz != null and bz != ''">
			bz, <!-- cz -->
		</if>
		<if test="nd != null and nd != ''">
			nd, <!-- lx -->
		</if>
		<if test="id_ != null and id_ != ''">
	          id_  <!-- id_ -->
	   </if>
		)VALUES(
		<if test="sxh != null and sxh != ''">
	          #{sxh, jdbcType=VARCHAR}, <!-- rkdh -->
	    </if>
		<if test="djbh != null and djbh != ''">
	          #{djbh, jdbcType=VARCHAR}, <!-- rkr -->
	    </if>
		<if test="cddw != null and cddw != ''">
	          #{cddw, jdbcType=VARCHAR}, <!-- rkyy -->
	    </if>
		<if test="cdrxm != null and cdrxm != ''">
	          #{cdrxm, jdbcType=VARCHAR}, <!-- yckdh -->
	    </if>
		<if test="tm != null and tm != ''">
	          #{tm, jdbcType=VARCHAR}, <!-- rksj -->
	    </if>
		<if test="lyxgqk != null and lyxgqk != ''">
	          #{lyxgqk, jdbcType=VARCHAR}, <!-- rksl -->
	    </if>
		<if test="djr != null and djr != ''">
	          #{djr, jdbcType=VARCHAR}, <!-- rkzt -->
	    </if>
		<if test="djsj != null and djsj != ''">
	          #{djsj, jdbcType=VARCHAR}, <!-- bz -->
	    </if>
		<if test="bz != null and bz != ''">
	          #{bz, jdbcType=VARCHAR}, <!-- cz -->
	    </if>
		<if test="nd != null and nd != ''">
	          #{nd, jdbcType=VARCHAR}, <!-- lx -->
	    </if>
		<if test="id_ != null and id_ != ''">
		     #{id_, jdbcType=VARCHAR}  <!-- id_ -->
	    </if>
		)
	</insert>
	
	<!-- 插入一个数据持久化对象(含所有字段) -->
	<insert id="insertAll"  parameterType="LYXG_PO">
		INSERT INTO LYXG (
		    <include refid="column" />
		)
		VALUES (
		    #{id_, jdbcType=VARCHAR},  <!-- id_ -->
		    #{sxh, jdbcType=VARCHAR},  <!-- rkdh -->
		    #{djbh, jdbcType=VARCHAR},  <!-- rkr -->
		    #{cddw, jdbcType=VARCHAR},  <!-- rkyy -->
		    #{cdrxm, jdbcType=VARCHAR},  <!-- yckdh -->
		    #{tm, jdbcType=VARCHAR},  <!-- rksj -->
		    #{lyxgqk, jdbcType=VARCHAR},  <!-- rksl -->
		    #{djr, jdbcType=VARCHAR},  <!-- rkzt -->
		    #{djsj, jdbcType=VARCHAR},  <!-- bz -->
		    #{bz, jdbcType=VARCHAR},  <!-- cz -->
		    #{nd, jdbcType=VARCHAR}  <!-- lx -->
		)
	</insert>

	<!-- 根据主键修改数据持久化对象 -->
	<update id="updateByKey" parameterType="LYXG_PO">
		UPDATE LYXG
		<set>
			<if test="id_ != null">
		          id_ = #{id_, jdbcType=VARCHAR},  <!-- id_ -->
			</if>
			<if test="sxh != null">
				sxh = #{sxh, jdbcType=VARCHAR},  <!-- rkdh -->
			</if>
			<if test="djbh != null">
				djbh = #{djbh, jdbcType=VARCHAR},  <!-- rkr -->
			</if>
			<if test="cddw != null">
				cddw = #{cddw, jdbcType=VARCHAR},  <!-- rkyy -->
			</if>
			<if test="cdrxm != null">
				cdrxm = #{cdrxm, jdbcType=VARCHAR},  <!-- yckdh -->
			</if>
			<if test="tm != null">
				tm = #{tm, jdbcType=VARCHAR},  <!-- rksj -->
			</if>
			<if test="lyxgqk != null">
				lyxgqk = #{lyxgqk, jdbcType=VARCHAR},  <!-- rksl -->
			</if>
			<if test="djr != null">
				djr = #{djr, jdbcType=VARCHAR},  <!-- rkzt -->
			</if>
			<if test="djsj != null">
				djsj = #{djsj, jdbcType=VARCHAR},  <!-- bz -->
			</if>
			<if test="bz != null">
				bz = #{bz, jdbcType=VARCHAR},  <!-- cz -->
			</if>
			<if test="nd != null">
				nd = #{nd, jdbcType=VARCHAR},  <!-- lx -->
			</if>
		</set>
		WHERE  id_ = #{id_}
	</update>
	
	<!-- 根据主键删除数据持久化对象 -->
	<delete id="deleteByKey">
		DELETE FROM LYXG WHERE  id_ = #{id_}
	</delete>

	<!-- 根据主键查询并返回数据持久化对象 -->
	<select id="selectByKey" resultType="Depot_rkPO">
		SELECT
		<include refid="column" />
		FROM LYXG WHERE  id_ = #{id_}
	</select>

	<!-- 根据唯一组合条件查询并返回数据持久化对象 -->
	<select id="selectOne" parameterType="Dto" resultType="Depot_rkPO">
		SELECT
		    <include refid="column" />
		FROM LYXG
		<where>
		    <include refid="equal" />
		</where>		
	</select>

	<!-- 根据Dto查询并返回数据持久化对象集合 -->
	<select id="list" parameterType="Dto" resultType="Depot_rkPO">
		SELECT
			<include refid="column" />	
		FROM LYXG
		<where>
		    <include refid="equal" />
		</where>	
	</select>

	<!-- 根据Dto查询并返回分页数据持久化对象集合 -->
	<select id="listPage" parameterType="Dto" resultType="LYXG_PO" useCache="false">
	    SELECT
			<include refid="column" />	
		FROM LYXG
		<where>
		    <include refid="equal" />
		</where>	
	</select>
	
	<!-- 根据Dto模糊查询并返回数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="like" parameterType="Dto" resultType="LYXG_PO">
		SELECT
			<include refid="column" />	
		FROM LYXG
		<where>
		    <include refid="like" />
		</where>	
	</select>

	<!-- 根据Dto模糊查询并返回分页数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="likePage" parameterType="Dto" resultType="LYXG_PO" useCache="false">
	    SELECT
			<include refid="column" />	
		FROM LYXG
		<where>
		    <include refid="like" />
		</where>	
	</select>
	
	<!-- 根据Dto统计行数 -->
	<select id="rows" resultType="Integer" parameterType="Dto">
		SELECT COUNT(1) AS aos_rows_ FROM LYXG
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 根据数学表达式进行数学运算 -->
	<select id="calc" parameterType="Dto" resultType="String">
		SELECT
			${_expr}
		FROM LYXG
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 表字段 -->
	<sql id="column">
		  id_,  <!-- id_ -->
		  sxh,  <!-- rkdh -->
		  djbh,  <!-- rkr -->
		  cddw,  <!-- rkyy -->
		  cdrxm,  <!-- yckdh -->
		  tm,  <!-- rksj -->
		  lyxgqk,  <!-- rksl -->
		  djr,  <!-- rkzt -->
		  djsj,  <!-- bz -->
		  bz,  <!-- cz -->
		  nd  <!-- lx -->
	</sql>
	
	<!-- 表字段(用于外表的关联时引用) -->
	<sql id="column2">
		  depot_rk.id_,  <!-- id_ -->
		  depot_rk.rkdh,  <!-- rkdh -->
		  depot_rk.rkr,  <!-- rkr -->
		  depot_rk.rkyy,  <!-- rkyy -->
		  depot_rk.yckdh,  <!-- yckdh -->
		  depot_rk.rksj,  <!-- rksj -->
		  depot_rk.rksl,  <!-- rksl -->
		  depot_rk.rkzt,  <!-- rkzt -->
		  depot_rk.bz,  <!-- bz -->
		  depot_rk.cz,  <!-- cz -->
		  depot_rk.lx  <!-- lx -->
	</sql>

	<!-- Where精确匹配字段 -->
	<sql id="equal">
	    <if test="id_ != null and id_ != ''">
		      AND id_ = #{id_}  <!-- id_ -->
		</if>
	    <if test="rkdh != null and rkdh != ''">
		      AND rkdh = #{rkdh}  <!-- rkdh -->
		</if>
	    <if test="rkr != null and rkr != ''">
		      AND rkr = #{rkr}  <!-- rkr -->
		</if>
	    <if test="rkyy != null and rkyy != ''">
		      AND rkyy = #{rkyy}  <!-- rkyy -->
		</if>
	    <if test="yckdh != null and yckdh != ''">
		      AND yckdh = #{yckdh}  <!-- yckdh -->
		</if>
	    <if test="rksj != null and rksj != ''">
		      AND rksj = #{rksj}  <!-- rksj -->
		</if>
	    <if test="rksl != null and rksl != ''">
		      AND rksl = #{rksl}  <!-- rksl -->
		</if>
	    <if test="rkzt != null and rkzt != ''">
		      AND rkzt = #{rkzt}  <!-- rkzt -->
		</if>
	    <if test="bz != null and bz != ''">
		      AND bz = #{bz}  <!-- bz -->
		</if>
	    <if test="cz != null and cz != ''">
		      AND cz = #{cz}  <!-- cz -->
		</if>
	    <if test="lx != null and lx != ''">
		      AND lx = #{lx}  <!-- lx -->
		</if>
	</sql>
	
	<!-- Where模糊匹配字段 -->
	<sql id="like">
	    <if test="id_ != null and id_ != ''">
		      AND id_ like '%${id_}%'  <!-- id_ -->
		</if>
	    <if test="sxh != null and sxh != ''">
		      AND sxh like '%${sxh}%'  <!-- rkdh -->
		</if>
	    <if test="djbh != null and djbh != ''">
		      AND djbh like '%${djbh}%'  <!-- rkr -->
		</if>
	    <if test="cddw != null and cddw != ''">
		      AND cddw like '%${cddw}%'  <!-- rkyy -->
		</if>
	    <if test="cdrxm != null and cdrxm != ''">
		      AND cdrxm like '%${cdrxm}%'  <!-- yckdh -->
		</if>
	    <if test="tm != null and tm != ''">
		      AND tm like '%${tm}%'  <!-- rksj -->
		</if>
	    <if test="lyxgqk != null and lyxgqk != ''">
		      AND lyxgqk like '%${lyxgqk}%'  <!-- rksl -->
		</if>
	    <if test="djr != null and djr != ''">
		      AND djr like '%${djr}%'  <!-- rkzt -->
		</if>
	    <if test="djsj != null and djsj != ''">
		      AND djsj like '%${djsj}%'  <!-- bz -->
		</if>
	    <if test="bz != null and bz != ''">
		      AND bz like '%${bz}%'  <!-- cz -->
		</if>
	    <if test="nd != null and nd != ''">
		      AND nd like '%${nd}%'  <!-- lx -->
		</if>
	</sql>


</mapper>
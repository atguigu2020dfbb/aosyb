<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- archive_sxjc_data[archive_sxjc_data]SQLMapper自动映射 -->
<!--  注意:此文件由AOS平台自动生成-禁止手工修改 2020-05-15 13:53:13 -->
<mapper namespace="cn.osworks.aos.system.dao.mapper.Archive_sxjc_dataMapper">
	
	<!-- 插入一个数据持久化对象(插入字段为传入PO实体的非空属性) -->
	<insert id="insert"  parameterType="Archive_sxjc_dataPO">
		INSERT INTO archive_sxjc_data (
		<if test="tid != null and tid != ''">
	         tid, <!-- tid -->
		</if>
		<if test="tablename_id_ != null and tablename_id_ != ''">
	         tablename_id_, <!-- tablename_id_ -->
		</if>
		<if test="tablename != null and tablename != ''">
	         tablename, <!-- tablename -->
		</if>
		<if test="text != null and text != ''">
	         text, <!-- text -->
		</if>
		<if test="id_ != null and id_ != ''">
	          id_  <!-- id_ -->
	   </if>
		)VALUES(
		<if test="tid != null and tid != ''">
	          #{tid, jdbcType=VARCHAR}, <!-- tid -->
	    </if>
		<if test="tablename_id_ != null and tablename_id_ != ''">
	          #{tablename_id_, jdbcType=VARCHAR}, <!-- tablename_id_ -->
	    </if>
		<if test="tablename != null and tablename != ''">
	          #{tablename, jdbcType=VARCHAR}, <!-- tablename -->
	    </if>
		<if test="text != null and text != ''">
	          #{text, jdbcType=VARCHAR}, <!-- text -->
	    </if>
		<if test="id_ != null and id_ != ''">
		     #{id_, jdbcType=VARCHAR}  <!-- id_ -->
	    </if>
		)
	</insert>
	
	<!-- 插入一个数据持久化对象(含所有字段) -->
	<insert id="insertAll"  parameterType="Archive_sxjc_dataPO">
		INSERT INTO archive_sxjc_data (
		    <include refid="column" />
		)
		VALUES (
		    #{id_, jdbcType=VARCHAR},  <!-- id_ -->
		    #{tid, jdbcType=VARCHAR},  <!-- tid -->
		    #{tablename_id_, jdbcType=VARCHAR},  <!-- tablename_id_ -->
		    #{tablename, jdbcType=VARCHAR},  <!-- tablename -->
		    #{text, jdbcType=VARCHAR}  <!-- text -->
		)
	</insert>

	<!-- 根据主键修改数据持久化对象 -->
	<update id="updateByKey" parameterType="Archive_sxjc_dataPO">
		UPDATE archive_sxjc_data
		<set>
			<if test="id_ != null">
		          id_ = #{id_, jdbcType=VARCHAR},  <!-- id_ -->
			</if>
			<if test="tid != null">
		          tid = #{tid, jdbcType=VARCHAR},  <!-- tid -->
			</if>
			<if test="tablename_id_ != null">
		          tablename_id_ = #{tablename_id_, jdbcType=VARCHAR},  <!-- tablename_id_ -->
			</if>
			<if test="tablename != null">
		          tablename = #{tablename, jdbcType=VARCHAR},  <!-- tablename -->
			</if>
			<if test="text != null">
		          text = #{text, jdbcType=VARCHAR},  <!-- text -->
			</if>
		</set>
		WHERE  id_ = #{id_}
	</update>
	
	<!-- 根据主键删除数据持久化对象 -->
	<delete id="deleteByKey">
		DELETE FROM archive_sxjc_data WHERE  id_ = #{id_}
	</delete>

	<delete id="deleteByTid" parameterType="Dto">
		DELETE FROM archive_sxjc_data WHERE  1=1

		<if test="tablename != null and tablename != ''">
			AND tablename = #{tablename}  <!-- id_ -->
		</if>
		<if test="tid != null and tid != ''">
			AND tid = #{tid}  <!-- tid -->
		</if>
	</delete>
	<!-- 根据主键查询并返回数据持久化对象 -->
	<select id="selectByKey" resultType="Archive_sxjc_dataPO">
		SELECT
		<include refid="column" />
		FROM archive_sxjc_data WHERE  id_ = #{id_}
	</select>

	<!-- 根据唯一组合条件查询并返回数据持久化对象 -->
	<select id="selectOne" parameterType="Dto" resultType="Archive_sxjc_dataPO">
		SELECT
		    <include refid="column" />
		FROM archive_sxjc_data
		<where>
		    <include refid="equal" />
		</where>		
	</select>

	<!-- 根据Dto查询并返回数据持久化对象集合 -->
	<select id="list" parameterType="Dto" resultType="Archive_sxjc_dataPO">
		SELECT
			<include refid="column" />	
		FROM archive_sxjc_data
		<where>
		    <include refid="equal" />
		</where>	
	</select>

	<!-- 根据Dto查询并返回分页数据持久化对象集合 -->
	<select id="listPage" parameterType="Dto" resultType="Archive_sxjc_dataPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FROM archive_sxjc_data
		<where>
		    <include refid="equal" />
		</where>	
	</select>
	
	<!-- 根据Dto模糊查询并返回数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="like" parameterType="Dto" resultType="Archive_sxjc_dataPO">
		SELECT
			<include refid="column" />	
		FROM archive_sxjc_data
		<where>
		    <include refid="like" />
		</where>	
	</select>

	<!-- 根据Dto模糊查询并返回分页数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="likePage" parameterType="Dto" resultType="Archive_sxjc_dataPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FROM archive_sxjc_data
		<where>
		    <include refid="like" />
		</where>	
	</select>
	
	<!-- 根据Dto统计行数 -->
	<select id="rows" resultType="Integer" parameterType="Dto">
		SELECT COUNT(1) AS aos_rows_ FROM archive_sxjc_data
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 根据数学表达式进行数学运算 -->
	<select id="calc" parameterType="Dto" resultType="String">
		SELECT
			${_expr}
		FROM archive_sxjc_data
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 表字段 -->
	<sql id="column">
		  id_,  <!-- id_ -->
		  tid,  <!-- tid -->
		  tablename_id_,  <!-- tablename_id_ -->
		  tablename,  <!-- tablename -->
		  text  <!-- text -->
	</sql>
	
	<!-- 表字段(用于外表的关联时引用) -->
	<sql id="column2">
		  archive_sxjc_data.id_,  <!-- id_ -->
		  archive_sxjc_data.tid,  <!-- tid -->
		  archive_sxjc_data.tablename_id_,  <!-- tablename_id_ -->
		  archive_sxjc_data.tablename,  <!-- tablename -->
		  archive_sxjc_data.text  <!-- text -->
	</sql>

	<!-- Where精确匹配字段 -->
	<sql id="equal">
	    <if test="id_ != null and id_ != ''">
		      AND id_ = #{id_}  <!-- id_ -->
		</if>
	    <if test="tid != null and tid != ''">
		      AND tid = #{tid}  <!-- tid -->
		</if>
	    <if test="tablename_id_ != null and tablename_id_ != ''">
		      AND tablename_id_ = #{tablename_id_}  <!-- tablename_id_ -->
		</if>
	    <if test="tablename != null and tablename != ''">
		      AND tablename = #{tablename}  <!-- tablename -->
		</if>
	    <if test="text != null and text != ''">
		      AND text = #{text}  <!-- text -->
		</if>
	</sql>
	
	<!-- Where模糊匹配字段 -->
	<sql id="like">
	    <if test="id_ != null and id_ != ''">
		      AND id_ like '%${id_}%'  <!-- id_ -->
		</if>
	    <if test="tid != null and tid != ''">
		      AND tid like '%${tid}%'  <!-- tid -->
		</if>
	    <if test="tablename_id_ != null and tablename_id_ != ''">
		      AND tablename_id_ like '%${tablename_id_}%'  <!-- tablename_id_ -->
		</if>
	    <if test="tablename != null and tablename != ''">
		      AND tablename like '%${tablename}%'  <!-- tablename -->
		</if>
	    <if test="text != null and text != ''">
		      AND text like '%${text}%'  <!-- text -->
		</if>
	</sql>
	
</mapper>
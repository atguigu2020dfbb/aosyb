<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- depot_cz_log[depot_cz_log]SQLMapper自动映射 -->
<!--  注意:此文件由AOS平台自动生成-禁止手工修改 2019-12-02 16:23:02 -->
<mapper namespace="cn.osworks.aos.system.dao.mapper.Depot_cz_logMapper">
	
	<!-- 插入一个数据持久化对象(插入字段为传入PO实体的非空属性) -->
	<insert id="insert"  parameterType="Depot_cz_logPO">
		INSERT INTO depot_cz_log (
		<if test="location_number != null and location_number != ''">
	         location_number, <!-- location_number -->
		</if>
		<if test="archive_storehouse != null and archive_storehouse != ''">
	         archive_storehouse, <!-- archive_storehouse -->
		</if>
		<if test="zuhao != null and zuhao != ''">
	         zuhao, <!-- zuhao -->
		</if>
		<if test="liehao != null and liehao != ''">
	         liehao, <!-- liehao -->
		</if>
		<if test="lrr != null and lrr != ''">
	         lrr, <!-- lrr -->
		</if>
		<if test="lrsj != null and lrsj != ''">
	         lrsj, <!-- lrsj -->
		</if>
		<if test="lr_description != null and lr_description != ''">
	         lr_description, <!-- lr_description -->
		</if>
		<if test="id_ != null and id_ != ''">
	          id_  <!-- id_ -->
	   </if>
		)VALUES(
		<if test="location_number != null and location_number != ''">
	          #{location_number, jdbcType=VARCHAR}, <!-- location_number -->
	    </if>
		<if test="archive_storehouse != null and archive_storehouse != ''">
	          #{archive_storehouse, jdbcType=VARCHAR}, <!-- archive_storehouse -->
	    </if>
		<if test="zuhao != null and zuhao != ''">
	          #{zuhao, jdbcType=VARCHAR}, <!-- zuhao -->
	    </if>
		<if test="liehao != null and liehao != ''">
	          #{liehao, jdbcType=VARCHAR}, <!-- liehao -->
	    </if>
		<if test="lrr != null and lrr != ''">
	          #{lrr, jdbcType=VARCHAR}, <!-- lrr -->
	    </if>
		<if test="lrsj != null and lrsj != ''">
	          #{lrsj, jdbcType=VARCHAR}, <!-- lrsj -->
	    </if>
		<if test="lr_description != null and lr_description != ''">
	          #{lr_description, jdbcType=VARCHAR}, <!-- lr_description -->
	    </if>
		<if test="id_ != null and id_ != ''">
		     #{id_, jdbcType=VARCHAR}  <!-- id_ -->
	    </if>
		)
	</insert>
	
	<!-- 插入一个数据持久化对象(含所有字段) -->
	<insert id="insertAll"  parameterType="Depot_cz_logPO">
		INSERT INTO depot_cz_log (
		    <include refid="column" />
		)
		VALUES (
		    #{id_, jdbcType=VARCHAR},  <!-- id_ -->
		    #{location_number, jdbcType=VARCHAR},  <!-- location_number -->
		    #{archive_storehouse, jdbcType=VARCHAR},  <!-- archive_storehouse -->
		    #{zuhao, jdbcType=VARCHAR},  <!-- zuhao -->
		    #{liehao, jdbcType=VARCHAR},  <!-- liehao -->
		    #{lrr, jdbcType=VARCHAR},  <!-- lrr -->
		    #{lrsj, jdbcType=VARCHAR},  <!-- lrsj -->
		    #{lr_description, jdbcType=VARCHAR}  <!-- lr_description -->
		)
	</insert>

	<!-- 根据主键修改数据持久化对象 -->
	<update id="updateByKey" parameterType="Depot_cz_logPO">
		UPDATE depot_cz_log
		<set>
			<if test="id_ != null">
		          id_ = #{id_, jdbcType=VARCHAR},  <!-- id_ -->
			</if>
			<if test="location_number != null">
		          location_number = #{location_number, jdbcType=VARCHAR},  <!-- location_number -->
			</if>
			<if test="archive_storehouse != null">
		          archive_storehouse = #{archive_storehouse, jdbcType=VARCHAR},  <!-- archive_storehouse -->
			</if>
			<if test="zuhao != null">
		          zuhao = #{zuhao, jdbcType=VARCHAR},  <!-- zuhao -->
			</if>
			<if test="liehao != null">
		          liehao = #{liehao, jdbcType=VARCHAR},  <!-- liehao -->
			</if>
			<if test="lrr != null">
		          lrr = #{lrr, jdbcType=VARCHAR},  <!-- lrr -->
			</if>
			<if test="lrsj != null">
		          lrsj = #{lrsj, jdbcType=VARCHAR},  <!-- lrsj -->
			</if>
			<if test="lr_description != null">
		          lr_description = #{lr_description, jdbcType=VARCHAR},  <!-- lr_description -->
			</if>
		</set>
		WHERE  id_ = #{id_}
	</update>
	
	<!-- 根据主键删除数据持久化对象 -->
	<delete id="deleteByKey">
		DELETE FROM depot_cz_log WHERE  id_ = #{id_}
	</delete>

	<!-- 根据主键查询并返回数据持久化对象 -->
	<select id="selectByKey" resultType="Depot_cz_logPO">
		SELECT
		<include refid="column" />
		FROM depot_cz_log WHERE  id_ = #{id_}
	</select>

	<!-- 根据唯一组合条件查询并返回数据持久化对象 -->
	<select id="selectOne" parameterType="Dto" resultType="Depot_cz_logPO">
		SELECT
		    <include refid="column" />
		FROM depot_cz_log
		<where>
		    <include refid="equal" />
		</where>		
	</select>

	<!-- 根据Dto查询并返回数据持久化对象集合 -->
	<select id="list" parameterType="Dto" resultType="Depot_cz_logPO">
		SELECT
			<include refid="column" />	
		FROM depot_cz_log
		<where>
		    <include refid="equal" />
		</where>	
	</select>

	<!-- 根据Dto查询并返回分页数据持久化对象集合 -->
	<select id="listPage" parameterType="Dto" resultType="Depot_cz_logPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FROM depot_cz_log
		<where>
		    <include refid="equal" />
		</where>	
	</select>
	
	<!-- 根据Dto模糊查询并返回数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="like" parameterType="Dto" resultType="Depot_cz_logPO">
		SELECT
			<include refid="column" />	
		FROM depot_cz_log
		<where>
		    <include refid="like" />
		</where>	
	</select>

	<!-- 根据Dto模糊查询并返回分页数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="likePage" parameterType="Dto" resultType="Depot_cz_logPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FROM depot_cz_log
		<where>
		    <include refid="like" />
		</where>	
	</select>
	
	<!-- 根据Dto统计行数 -->
	<select id="rows" resultType="Integer" parameterType="Dto">
		SELECT COUNT(1) AS aos_rows_ FROM depot_cz_log
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 根据数学表达式进行数学运算 -->
	<select id="calc" parameterType="Dto" resultType="String">
		SELECT
			${_expr}
		FROM depot_cz_log
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 表字段 -->
	<sql id="column">
		  id_,  <!-- id_ -->
		  location_number,  <!-- location_number -->
		  archive_storehouse,  <!-- archive_storehouse -->
		  zuhao,  <!-- zuhao -->
		  liehao,  <!-- liehao -->
		  lrr,  <!-- lrr -->
		  lrsj,  <!-- lrsj -->
		  lr_description  <!-- lr_description -->
	</sql>
	
	<!-- 表字段(用于外表的关联时引用) -->
	<sql id="column2">
		  depot_cz_log.id_,  <!-- id_ -->
		  depot_cz_log.location_number,  <!-- location_number -->
		  depot_cz_log.archive_storehouse,  <!-- archive_storehouse -->
		  depot_cz_log.zuhao,  <!-- zuhao -->
		  depot_cz_log.liehao,  <!-- liehao -->
		  depot_cz_log.lrr,  <!-- lrr -->
		  depot_cz_log.lrsj,  <!-- lrsj -->
		  depot_cz_log.lr_description  <!-- lr_description -->
	</sql>

	<!-- Where精确匹配字段 -->
	<sql id="equal">
	    <if test="id_ != null and id_ != ''">
		      AND id_ = #{id_}  <!-- id_ -->
		</if>
	    <if test="location_number != null and location_number != ''">
		      AND location_number = #{location_number}  <!-- location_number -->
		</if>
	    <if test="archive_storehouse != null and archive_storehouse != ''">
		      AND archive_storehouse = #{archive_storehouse}  <!-- archive_storehouse -->
		</if>
	    <if test="zuhao != null and zuhao != ''">
		      AND zuhao = #{zuhao}  <!-- zuhao -->
		</if>
	    <if test="liehao != null and liehao != ''">
		      AND liehao = #{liehao}  <!-- liehao -->
		</if>
	    <if test="lrr != null and lrr != ''">
		      AND lrr = #{lrr}  <!-- lrr -->
		</if>
	    <if test="lrsj != null and lrsj != ''">
		      AND lrsj = #{lrsj}  <!-- lrsj -->
		</if>
	    <if test="lr_description != null and lr_description != ''">
		      AND lr_description = #{lr_description}  <!-- lr_description -->
		</if>
	</sql>
	
	<!-- Where模糊匹配字段 -->
	<sql id="like">
	    <if test="id_ != null and id_ != ''">
		      AND id_ like '%${id_}%'  <!-- id_ -->
		</if>
	    <if test="location_number != null and location_number != ''">
		      AND location_number like '%${location_number}%'  <!-- location_number -->
		</if>
	    <if test="archive_storehouse != null and archive_storehouse != ''">
		      AND archive_storehouse like '%${archive_storehouse}%'  <!-- archive_storehouse -->
		</if>
	    <if test="zuhao != null and zuhao != ''">
		      AND zuhao like '%${zuhao}%'  <!-- zuhao -->
		</if>
	    <if test="liehao != null and liehao != ''">
		      AND liehao like '%${liehao}%'  <!-- liehao -->
		</if>
	    <if test="lrr != null and lrr != ''">
		      AND lrr like '%${lrr}%'  <!-- lrr -->
		</if>
	    <if test="lrsj != null and lrsj != ''">
		      AND lrsj like '%${lrsj}%'  <!-- lrsj -->
		</if>
	    <if test="lr_description != null and lr_description != ''">
		      AND lr_description like '%${lr_description}%'  <!-- lr_description -->
		</if>
	</sql>
	
</mapper>
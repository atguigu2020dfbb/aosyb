<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- archive_compilation_zg[archive_compilation_zg]SQLMapper自动映射 -->
<!--  注意:此文件由AOS平台自动生成-禁止手工修改 2020-02-24 12:01:51 -->
<mapper namespace="cn.osworks.aos.system.dao.mapper.Archive_compilation_zgMapper">
	
	<!-- 插入一个数据持久化对象(插入字段为传入PO实体的非空属性) -->
	<insert id="insert"  parameterType="Archive_compilation_zgPO">
		INSERT INTO archive_compilation_zg (
		<if test="rw_id_ != null and rw_id_ != ''">
	         rw_id_, <!-- rw_id_ -->
		</if>
		<if test="username != null and username != ''">
	         username, <!-- username -->
		</if>
		<if test="tablename != null and tablename != ''">
	         tablename, <!-- tablename -->
		</if>
		<if test="zg_path != null and zg_path != ''">
	         zg_path, <!-- zg_path -->
		</if>
		<if test="zg_description != null and zg_description != ''">
	         zg_description, <!-- zg_description -->
		</if>
		<if test="operate_time != null and operate_time != ''">
	         operate_time, <!-- operate_time -->
		</if>
		<if test="id_ != null and id_ != ''">
	          id_  <!-- id_ -->
	   </if>
		)VALUES(
		<if test="rw_id_ != null and rw_id_ != ''">
	          #{rw_id_, jdbcType=VARCHAR}, <!-- rw_id_ -->
	    </if>
		<if test="username != null and username != ''">
	          #{username, jdbcType=VARCHAR}, <!-- username -->
	    </if>
		<if test="tablename != null and tablename != ''">
	          #{tablename, jdbcType=VARCHAR}, <!-- tablename -->
	    </if>
		<if test="zg_path != null and zg_path != ''">
	          #{zg_path, jdbcType=VARCHAR}, <!-- zg_path -->
	    </if>
		<if test="zg_description != null and zg_description != ''">
	          #{zg_description, jdbcType=VARCHAR}, <!-- zg_description -->
	    </if>
		<if test="operate_time != null and operate_time != ''">
	          #{operate_time, jdbcType=VARCHAR}, <!-- operate_time -->
	    </if>
		<if test="id_ != null and id_ != ''">
		     #{id_, jdbcType=VARCHAR}  <!-- id_ -->
	    </if>
		)
	</insert>
	
	<!-- 插入一个数据持久化对象(含所有字段) -->
	<insert id="insertAll"  parameterType="Archive_compilation_zgPO">
		INSERT INTO archive_compilation_zg (
		    <include refid="column" />
		)
		VALUES (
		    #{id_, jdbcType=VARCHAR},  <!-- id_ -->
		    #{rw_id_, jdbcType=VARCHAR},  <!-- rw_id_ -->
		    #{username, jdbcType=VARCHAR},  <!-- username -->
		    #{tablename, jdbcType=VARCHAR},  <!-- tablename -->
		    #{zg_path, jdbcType=VARCHAR},  <!-- zg_path -->
		    #{zg_description, jdbcType=VARCHAR},  <!-- zg_description -->
		    #{operate_time, jdbcType=VARCHAR}  <!-- operate_time -->
		)
	</insert>

	<!-- 根据主键修改数据持久化对象 -->
	<update id="updateByKey" parameterType="Archive_compilation_zgPO">
		UPDATE archive_compilation_zg
		<set>
			<if test="id_ != null">
		          id_ = #{id_, jdbcType=VARCHAR},  <!-- id_ -->
			</if>
			<if test="rw_id_ != null">
		          rw_id_ = #{rw_id_, jdbcType=VARCHAR},  <!-- rw_id_ -->
			</if>
			<if test="username != null">
		          username = #{username, jdbcType=VARCHAR},  <!-- username -->
			</if>
			<if test="tablename != null">
		          tablename = #{tablename, jdbcType=VARCHAR},  <!-- tablename -->
			</if>
			<if test="zg_path != null">
		          zg_path = #{zg_path, jdbcType=VARCHAR},  <!-- zg_path -->
			</if>
			<if test="zg_description != null">
		          zg_description = #{zg_description, jdbcType=VARCHAR},  <!-- zg_description -->
			</if>
			<if test="operate_time != null">
		          operate_time = #{operate_time, jdbcType=VARCHAR},  <!-- operate_time -->
			</if>
		</set>
		WHERE  id_ = #{id_}
	</update>
	
	<!-- 根据主键删除数据持久化对象 -->
	<delete id="deleteByKey">
		DELETE FROM archive_compilation_zg WHERE  id_ = #{id_}
	</delete>

	<!-- 根据主键查询并返回数据持久化对象 -->
	<select id="selectByKey" resultType="Archive_compilation_zgPO">
		SELECT
		<include refid="column" />
		FROM archive_compilation_zg WHERE  id_ = #{id_}
	</select>

	<!-- 根据唯一组合条件查询并返回数据持久化对象 -->
	<select id="selectOne" parameterType="Dto" resultType="Archive_compilation_zgPO">
		SELECT
		    <include refid="column" />
		FROM archive_compilation_zg
		<where>
		    <include refid="equal" />
		</where>		
	</select>

	<!-- 根据Dto查询并返回数据持久化对象集合 -->
	<select id="list" parameterType="Dto" resultType="Archive_compilation_zgPO">
		SELECT
			<include refid="column" />	
		FROM archive_compilation_zg
		<where>
		    <include refid="equal" />
		</where>	
	</select>

	<!-- 根据Dto查询并返回分页数据持久化对象集合 -->
	<select id="listPage" parameterType="Dto" resultType="Archive_compilation_zgPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FROM archive_compilation_zg
		<where>
		    <include refid="equal" />
		</where>	
	</select>
	
	<!-- 根据Dto模糊查询并返回数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="like" parameterType="Dto" resultType="Archive_compilation_zgPO">
		SELECT
			<include refid="column" />	
		FROM archive_compilation_zg
		<where>
		    <include refid="like" />
		</where>	
	</select>

	<!-- 根据Dto模糊查询并返回分页数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="likePage" parameterType="Dto" resultType="Archive_compilation_zgPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FROM archive_compilation_zg
		<where>
		    <include refid="like" />
		</where>	
	</select>
	
	<!-- 根据Dto统计行数 -->
	<select id="rows" resultType="Integer" parameterType="Dto">
		SELECT COUNT(1) AS aos_rows_ FROM archive_compilation_zg
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 根据数学表达式进行数学运算 -->
	<select id="calc" parameterType="Dto" resultType="String">
		SELECT
			${_expr}
		FROM archive_compilation_zg
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 表字段 -->
	<sql id="column">
		  id_,  <!-- id_ -->
		  rw_id_,  <!-- rw_id_ -->
		  username,  <!-- username -->
		  tablename,  <!-- tablename -->
		  zg_path,  <!-- zg_path -->
		  zg_description,  <!-- zg_description -->
		  operate_time  <!-- operate_time -->
	</sql>
	
	<!-- 表字段(用于外表的关联时引用) -->
	<sql id="column2">
		  archive_compilation_zg.id_,  <!-- id_ -->
		  archive_compilation_zg.rw_id_,  <!-- rw_id_ -->
		  archive_compilation_zg.username,  <!-- username -->
		  archive_compilation_zg.tablename,  <!-- tablename -->
		  archive_compilation_zg.zg_path,  <!-- zg_path -->
		  archive_compilation_zg.zg_description,  <!-- zg_description -->
		  archive_compilation_zg.operate_time  <!-- operate_time -->
	</sql>

	<!-- Where精确匹配字段 -->
	<sql id="equal">
	    <if test="id_ != null and id_ != ''">
		      AND id_ = #{id_}  <!-- id_ -->
		</if>
	    <if test="rw_id_ != null and rw_id_ != ''">
		      AND rw_id_ = #{rw_id_}  <!-- rw_id_ -->
		</if>
	    <if test="username != null and username != ''">
		      AND username = #{username}  <!-- username -->
		</if>
	    <if test="tablename != null and tablename != ''">
		      AND tablename = #{tablename}  <!-- tablename -->
		</if>
	    <if test="zg_path != null and zg_path != ''">
		      AND zg_path = #{zg_path}  <!-- zg_path -->
		</if>
	    <if test="zg_description != null and zg_description != ''">
		      AND zg_description = #{zg_description}  <!-- zg_description -->
		</if>
	    <if test="operate_time != null and operate_time != ''">
		      AND operate_time = #{operate_time}  <!-- operate_time -->
		</if>
	</sql>
	
	<!-- Where模糊匹配字段 -->
	<sql id="like">
	    <if test="id_ != null and id_ != ''">
		      AND id_ like '%${id_}%'  <!-- id_ -->
		</if>
	    <if test="rw_id_ != null and rw_id_ != ''">
		      AND rw_id_ like '%${rw_id_}%'  <!-- rw_id_ -->
		</if>
	    <if test="username != null and username != ''">
		      AND username like '%${username}%'  <!-- username -->
		</if>
	    <if test="tablename != null and tablename != ''">
		      AND tablename like '%${tablename}%'  <!-- tablename -->
		</if>
	    <if test="zg_path != null and zg_path != ''">
		      AND zg_path like '%${zg_path}%'  <!-- zg_path -->
		</if>
	    <if test="zg_description != null and zg_description != ''">
		      AND zg_description like '%${zg_description}%'  <!-- zg_description -->
		</if>
	    <if test="operate_time != null and operate_time != ''">
		      AND operate_time like '%${operate_time}%'  <!-- operate_time -->
		</if>
	</sql>
	
</mapper>
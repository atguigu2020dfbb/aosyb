<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- aos_sys_qzdw[aos_sys_qzdw]SQLMapper自动映射 -->
<!--  注意:此文件由AOS平台自动生成-禁止手工修改 2020-10-13 10:24:15 -->
<mapper namespace="cn.osworks.aos.system.dao.mapper.Aos_sys_qzdwMapper">
	
	<!-- 插入一个数据持久化对象(插入字段为传入PO实体的非空属性) -->
	<insert id="insert"  parameterType="Aos_sys_qzdwPO">
		INSERT INTO aos_sys_qzdw (
		<if test="qzh != null and qzh != ''">
	         qzh, <!-- qzh -->
		</if>
		<if test="qzdw != null and qzdw != ''">
	         qzdw, <!-- qzdw -->
		</if>
		<if test="qzlb != null and qzlb != ''">
	         qzlb, <!-- qzlb -->
		</if>
		<if test="bz != null and bz != ''">
	         bz, <!-- bz -->
		</if>
		<if test="qzxh != null">
	         qzxh, <!-- qzxh -->
		</if>
		<if test="qznd != null and qznd != ''">
	         qznd, <!-- qznd -->
		</if>
		<if test="id_ != null and id_ != ''">
	          id_  <!-- id_ -->
	   </if>
		)VALUES(
		<if test="qzh != null and qzh != ''">
	          #{qzh, jdbcType=VARCHAR}, <!-- qzh -->
	    </if>
		<if test="qzdw != null and qzdw != ''">
	          #{qzdw, jdbcType=VARCHAR}, <!-- qzdw -->
	    </if>
		<if test="qzlb != null and qzlb != ''">
	          #{qzlb, jdbcType=VARCHAR}, <!-- qzlb -->
	    </if>
		<if test="bz != null and bz != ''">
	          #{bz, jdbcType=VARCHAR}, <!-- bz -->
	    </if>
		<if test="qzxh != null">
	          #{qzxh, jdbcType=INTEGER}, <!-- qzxh -->
	    </if>
		<if test="qznd != null and qznd != ''">
	          #{qznd, jdbcType=VARCHAR}, <!-- qznd -->
	    </if>
		<if test="id_ != null and id_ != ''">
		     #{id_, jdbcType=VARCHAR}  <!-- id_ -->
	    </if>
		)
	</insert>
	
	<!-- 插入一个数据持久化对象(含所有字段) -->
	<insert id="insertAll"  parameterType="Aos_sys_qzdwPO">
		INSERT INTO aos_sys_qzdw (
		    <include refid="column" />
		)
		VALUES (
		    #{id_, jdbcType=VARCHAR},  <!-- id_ -->
		    #{qzh, jdbcType=VARCHAR},  <!-- qzh -->
		    #{qzdw, jdbcType=VARCHAR},  <!-- qzdw -->
		    #{qzlb, jdbcType=VARCHAR},  <!-- qzlb -->
		    #{bz, jdbcType=VARCHAR},  <!-- bz -->
		    #{qzxh, jdbcType=INTEGER},  <!-- qzxh -->
		    #{qznd, jdbcType=VARCHAR}  <!-- qznd -->
		)
	</insert>

	<!-- 根据主键修改数据持久化对象 -->
	<update id="updateByKey" parameterType="Aos_sys_qzdwPO">
		UPDATE aos_sys_qzdw
		<set>
			<if test="id_ != null">
		          id_ = #{id_, jdbcType=VARCHAR},  <!-- id_ -->
			</if>
			<if test="qzh != null">
		          qzh = #{qzh, jdbcType=VARCHAR},  <!-- qzh -->
			</if>
			<if test="qzdw != null">
		          qzdw = #{qzdw, jdbcType=VARCHAR},  <!-- qzdw -->
			</if>
			<if test="qzlb != null">
		          qzlb = #{qzlb, jdbcType=VARCHAR},  <!-- qzlb -->
			</if>
			<if test="bz != null">
		          bz = #{bz, jdbcType=VARCHAR},  <!-- bz -->
			</if>
			<if test="qzxh != null">
		          qzxh = #{qzxh, jdbcType=INTEGER},  <!-- qzxh -->
			</if>
			<if test="qznd != null">
		          qznd = #{qznd, jdbcType=VARCHAR},  <!-- qznd -->
			</if>
		</set>
		WHERE  id_ = #{id_}
	</update>
	
	<!-- 根据主键删除数据持久化对象 -->
	<delete id="deleteByKey">
		DELETE FROM aos_sys_qzdw WHERE  id_ = #{id_}
	</delete>

	<!-- 根据主键查询并返回数据持久化对象 -->
	<select id="selectByKey" resultType="Aos_sys_qzdwPO">
		SELECT
		<include refid="column" />
		FROM aos_sys_qzdw WHERE  id_ = #{id_}
	</select>

	<!-- 根据唯一组合条件查询并返回数据持久化对象 -->
	<select id="selectOne" parameterType="Dto" resultType="Aos_sys_qzdwPO">
		SELECT
		    <include refid="column" />
		FROM aos_sys_qzdw
		<where>
		    <include refid="equal" />
		</where>		
	</select>

	<!-- 根据Dto查询并返回数据持久化对象集合 -->
	<select id="list" parameterType="Dto" resultType="Aos_sys_qzdwPO">
		SELECT
			<include refid="column" />	
		FROM aos_sys_qzdw
		<where>
		    <include refid="equal" />
		</where>	
	</select>

	<!-- 根据Dto查询并返回分页数据持久化对象集合 -->
	<select id="listPage" parameterType="Dto" resultType="Aos_sys_qzdwPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FROM aos_sys_qzdw
		<where>
		    <include refid="equal" />
		</where>	
	</select>
	
	<!-- 根据Dto模糊查询并返回数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="like" parameterType="Dto" resultType="Aos_sys_qzdwPO">
		SELECT
			<include refid="column" />	
		FROM aos_sys_qzdw
		<where>
		    <include refid="like" />
		</where>	
	</select>

	<!-- 根据Dto模糊查询并返回分页数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="likePage" parameterType="Dto" resultType="Aos_sys_qzdwPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FROM aos_sys_qzdw
		<where>
		    <include refid="like" />
		</where>	
	</select>
	
	<!-- 根据Dto统计行数 -->
	<select id="rows" resultType="Integer" parameterType="Dto">
		SELECT COUNT(1) AS aos_rows_ FROM aos_sys_qzdw
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 根据数学表达式进行数学运算 -->
	<select id="calc" parameterType="Dto" resultType="String">
		SELECT
			${_expr}
		FROM aos_sys_qzdw
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 表字段 -->
	<sql id="column">
		  id_,  <!-- id_ -->
		  qzh,  <!-- qzh -->
		  qzdw,  <!-- qzdw -->
		  qzlb,  <!-- qzlb -->
		  bz,  <!-- bz -->
		  qzxh,  <!-- qzxh -->
		  qznd  <!-- qznd -->
	</sql>
	
	<!-- 表字段(用于外表的关联时引用) -->
	<sql id="column2">
		  aos_sys_qzdw.id_,  <!-- id_ -->
		  aos_sys_qzdw.qzh,  <!-- qzh -->
		  aos_sys_qzdw.qzdw,  <!-- qzdw -->
		  aos_sys_qzdw.qzlb,  <!-- qzlb -->
		  aos_sys_qzdw.bz,  <!-- bz -->
		  aos_sys_qzdw.qzxh,  <!-- qzxh -->
		  aos_sys_qzdw.qznd  <!-- qznd -->
	</sql>

	<!-- Where精确匹配字段 -->
	<sql id="equal">
	    <if test="id_ != null and id_ != ''">
		      AND id_ = #{id_}  <!-- id_ -->
		</if>
	    <if test="qzh != null and qzh != ''">
		      AND qzh = #{qzh}  <!-- qzh -->
		</if>
	    <if test="qzdw != null and qzdw != ''">
		      AND qzdw = #{qzdw}  <!-- qzdw -->
		</if>
	    <if test="qzlb != null and qzlb != ''">
		      AND qzlb = #{qzlb}  <!-- qzlb -->
		</if>
	    <if test="bz != null and bz != ''">
		      AND bz = #{bz}  <!-- bz -->
		</if>
	   <if test="qzxh != null ">
		      AND qzxh = #{qzxh}  <!-- qzxh -->
		</if>
	    <if test="qznd != null and qznd != ''">
		      AND qznd = #{qznd}  <!-- qznd -->
		</if>
	</sql>
	
	<!-- Where模糊匹配字段 -->
	<sql id="like">
	    <if test="id_ != null and id_ != ''">
		      AND id_ like '%${id_}%'  <!-- id_ -->
		</if>
	    <if test="qzh != null and qzh != ''">
		      AND qzh like '%${qzh}%'  <!-- qzh -->
		</if>
	    <if test="qzdw != null and qzdw != ''">
		      AND qzdw like '%${qzdw}%'  <!-- qzdw -->
		</if>
	    <if test="qzlb != null and qzlb != ''">
		      AND qzlb like '%${qzlb}%'  <!-- qzlb -->
		</if>
	    <if test="bz != null and bz != ''">
		      AND bz like '%${bz}%'  <!-- bz -->
		</if>
	    <if test="qznd != null and qznd != ''">
		      AND qznd like '%${qznd}%'  <!-- qznd -->
		</if>
	</sql>
	
</mapper>